{{- /*
The main Deployment Controller for the application being deployed. This resource manages the creation and replacement
of the Pods backing your application.
*/ -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-service.fullname" . }}
  labels:
    # These labels are required by helm. You can read more about required labels in the chart best pracices guide:
    # https://docs.helm.sh/chart_best_practices/#standard-labels
    helm.sh/chart: {{ include "k8s-service.chart" . }}
    app.kubernetes.io/name: {{ include "k8s-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.deploymentAnnotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      gruntwork.io/app-name: {{ .Values.applicationName }}
      app.kubernetes.io/name: {{ include "k8s-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        gruntwork.io/app-name: {{ .Values.applicationName }}
        app.kubernetes.io/name: {{ include "k8s-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Values.applicationName }}
          image: "{{ .Values.containerImage.repository }}:{{ .Values.containerImage.tag }}"
          imagePullPolicy: {{ .Values.containerImage.pullPolicy | default "IfNotPresent" }}
          {{- if .Values.containerPorts }}
          ports:
            {{- range $key, $value := .Values.containerPorts }}
            - name: {{ $key }}
              containerPort: {{ int $value.port }}
              protocol: {{ $value.protocol }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.containerResources | indent 12 }}
          # Include a preStop hook with a shutdown delay for eventual consistency reasons.
          # See https://blog.gruntwork.io/delaying-shutdown-to-wait-for-pod-deletion-propagation-445f779a8304
          {{- if .Values.shutdownDelay }}
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - "{{ int .Values.shutdownDelay }}"
          {{- end }}
        {{- range $key, $value := .Values.sideCarContainers }}
        - name: {{ $key }}
{{ toYaml $value | indent 12 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
